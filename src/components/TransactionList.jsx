// src/components/TransactionList.jsx
// Importa React para criar componente
import React from "react";

// Componente TransactionList: lista de transa√ß√µes
// Recebe props: transactions (array) e onDeleteTransaction (fun√ß√£o)
const TransactionList = ({ transactions, onDeleteTransaction }) => {
  // Objeto para mapear chaves de categoria para nomes amig√°veis
  const categoryNames = {
    salario: "Sal√°rio",
    alimentacao: "Alimenta√ß√£o",
    transporte: "Transporte",
    lazer: "Lazer",
    outros: "Outros",
  };

  // Fun√ß√£o para formatar data ISO para formato brasileiro
  const formatDate = (dateString) => {
    // Converte string ISO para objeto Date e formata para DD/MM/AAAA
    return new Date(dateString).toLocaleDateString("pt-BR");
  };

  // Fun√ß√£o para formatar valor como moeda brasileira
  const formatCurrency = (value) => {
    // Converte n√∫mero para string com 2 casas decimais e substitui . por ,
    return `R$ ${value.toFixed(2).replace(".", ",")}`;
  };

  // Retorna JSX do componente
  return (
    // Se√ß√£o que cont√©m a lista
    <section>
      {/* Container flex√≠vel para t√≠tulo e poss√≠veis a√ß√µes futuras */}
      <div
        style={{
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
        }}
      >
        {/* T√≠tulo da se√ß√£o */}
        <h2>Transa√ß√µes</h2>
      </div>

      {/* Lista n√£o ordenada para transa√ß√µes */}
      <ul id="transaction-list">
        {/* Mapeia array de transa√ß√µes para elementos JSX */}
        {transactions.map((transaction) => (
          // Cada item da lista com key √∫nica (importante para React)
          <li key={transaction.id} className={transaction.type}>
            {/* Informa√ß√µes da transa√ß√£o */}
            <div className="transaction-info">
              {/* Descri√ß√£o em negrito */}
              <strong>{transaction.description}</strong>
              {/* Metadados da transa√ß√£o */}
              <div className="transaction-meta">
                {/* Data formatada */}
                <div>{formatDate(transaction.date)}</div>
                {/* Tag de categoria */}
                <span className="category-tag">
                  {/* Usa categoryNames para nome amig√°vel ou categoria original */}
                  {categoryNames[transaction.category] || transaction.category}
                </span>
              </div>
            </div>

            {/* Valor e bot√£o de deletar */}
            <div className="transaction-amount">
              {/* Valor com sinal + ou - baseado no tipo */}
              <span className="valor">
                {transaction.type === "receita" ? "+" : "-"}
                {formatCurrency(transaction.amount)}
              </span>
              {/* Bot√£o para deletar transa√ß√£o */}
              <button
                className="delete-btn"
                // Quando clicado, chama onDeleteTransaction com ID da transa√ß√£o
                onClick={() => onDeleteTransaction(transaction.id)}
              >
                üóëÔ∏è
              </button>
            </div>
          </li>
        ))}
      </ul>
    </section>
  );
};

// Exporta o componente para ser usado em outros arquivos
export default TransactionList;
