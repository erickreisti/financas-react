// src/pages/Dashboard.tsx
// P√°gina principal com vis√£o geral das finan√ßas

import Saldo from '../components/Saldo';
import TransactionList from '../components/TransactionList';
import TransactionForm from '../components/TransactionForm';
import { useTransactions } from '../hooks/useTransactions'; // Importa hook do contexto

// Componente Dashboard: p√°gina principal com vis√£o geral
const Dashboard = () => {
  // Usa hook customizado para acessar contexto de transa√ß√µes
  // Desestrutura todas as fun√ß√µes e dados necess√°rios
  const { transactions, addTransaction, deleteTransaction, calculateTotal } =
    useTransactions();

  // Filtra apenas as √∫ltimas 5 transa√ß√µes (slice(-5) pega os √∫ltimos 5 itens)
  const recentTransactions = transactions.slice(-5);

  // Retorna JSX (interface do componente)
  return (
    // Div principal do dashboard
    <div>
      {/* T√≠tulo da p√°gina */}
      <h1>üìä Dashboard</h1>

      {/* Componente Saldo recebendo fun√ß√£o para calcular total */}
      <Saldo total={calculateTotal()} />

      {/* Se√ß√£o de √∫ltimas transa√ß√µes */}
      <div className="card">
        {/* Subt√≠tulo */}
        <h2>√öltimas Transa√ß√µes</h2>
        {/* Lista de transa√ß√µes recentes */}
        {/* Passa transa√ß√µes filtradas e fun√ß√£o de delete do contexto */}
        <TransactionList
          transactions={recentTransactions}
          onDeleteTransaction={deleteTransaction}
        />
      </div>

      {/* Se√ß√£o para adicionar nova transa√ß√£o */}
      <div className="card">
        {/* Subt√≠tulo */}
        <h2>Adicionar Nova Transa√ß√£o</h2>
        {/* Formul√°rio para adicionar transa√ß√£o */}
        {/* Passa fun√ß√£o para adicionar nova transa√ß√£o do contexto */}
        <TransactionForm onAddTransaction={addTransaction} />
      </div>
    </div>
  );
};

// Exporta componente para ser usado em outras partes do app
export default Dashboard;
